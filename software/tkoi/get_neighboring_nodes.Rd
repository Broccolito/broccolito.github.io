% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_neighboring_nodes.R
\name{get_neighboring_nodes}
\alias{get_neighboring_nodes}
\title{Retrieve Neighboring Nodes in a Knowledge Graph}
\usage{
get_neighboring_nodes(gene_node_id, degree_expansion, subnetwork)
}
\arguments{
\item{gene_node_id}{A character string representing the unique node ID of a gene in the \code{tkoi::tkoi_net} igraph object.}

\item{degree_expansion}{An integer indicating the radius (in number of hops) to expand the search for neighbors.
For example, \code{degree_expansion = 1} returns first-degree (direct) neighbors, while \code{degree_expansion = 2} includes both direct and second-degree (indirect) neighbors.}

\item{subnetwork}{An \code{igraph} object (typically a subgraph of \code{tkoi_net}) in which
the neighborhood search will be performed.}
}
\value{
A character vector of node IDs representing the neighbors of the specified gene node.
}
\description{
This function returns all neighboring nodes for a given gene node ID in the tKOI knowledge graph.
The neighborhood is defined by the number of hops (\code{degree_expansion}) from the input node.
}
\details{
The function leverages the \code{igraph::ego()} function to extract the subgraph containing all nodes within a specified path length
from the target node. It then returns the node IDs (as character vector) of these neighbors.
This is useful in the tKOI pipeline for assessing local network topology around significantly altered genes.
}
\examples{
\dontrun{
# Get direct neighbors of a gene node with ID "ENSG00000123456"
get_neighboring_nodes("ENSG00000123456", degree_expansion = 1)

# Get both direct and indirect (2-hop) neighbors
get_neighboring_nodes("ENSG00000123456", degree_expansion = 2)
}

}
\seealso{
\code{\link[igraph]{ego}}, \code{\link[tkoi]{run_tkoi}}
}
